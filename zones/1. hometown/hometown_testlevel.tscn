[gd_scene load_steps=13 format=3 uid="uid://d4gxodrlg1mqa"]

[ext_resource type="PackedScene" uid="uid://cqk6ejnid4y31" path="res://scenes/tilesets/tile_map_hometown.tscn" id="1_5xc7s"]
[ext_resource type="Script" path="res://scenes/zones/1. hometown/hometown_testlevel.gd" id="1_gure2"]
[ext_resource type="PackedScene" uid="uid://bc5hhetbysrdl" path="res://scenes/entities/characters/Owen.tscn" id="2_y2qan"]
[ext_resource type="Texture2D" uid="uid://uguontbqj15u" path="res://assets/backgrounds/PO. sky 0.1.png" id="3_ht8he"]
[ext_resource type="PackedScene" uid="uid://du6q2awixpiqt" path="res://scenes/components/timer_handler.tscn" id="4_j7puc"]
[ext_resource type="PackedScene" uid="uid://dh7owtji0y88v" path="res://scenes/entities/UI_entities/e_popup.tscn" id="4_suvvi"]
[ext_resource type="Texture2D" uid="uid://bitcmi3b1pn6q" path="res://assets/sprites/terrain/testParallax.png" id="5_1hesp"]
[ext_resource type="PackedScene" uid="uid://c2lt64uj77jv7" path="res://scenes/menus/player_ui.tscn" id="8_2l018"]
[ext_resource type="Texture2D" uid="uid://cgvv66xaqy71w" path="res://assets/sprites/terrain/testParallax2.png" id="8_4jmcr"]
[ext_resource type="Texture2D" uid="uid://bdvkg76bu8m1i" path="res://assets/sprites/other/carstest.png" id="9_4icw6"]

[sub_resource type="GDScript" id="GDScript_rm3dv"]
script/source = "extends CharacterBody2D


@onready var anim = $AnimationPlayer
@onready var sprite = $Sprite2D
#@onready var UI_E = $Hometown_testlevel/UI_Handler/Door/Area2D/E_Popup

var canJump : bool
var canDouble : bool = false
var fireSpeed : float = 0.5

@export_category(\"Movement\")
@export var moveSpeed : float = 100.0
var isMoving : bool
var playerPos = self

@export_category(\"Jumping\")
@export var jHeight : float = 92
@export var jPeak : float = 0.28
@export var jTime : float = 0.28

@onready var jVelo: float = ((1.5 * jHeight) / jPeak) * -1
@onready var dVelo: float = ((2.75 * jHeight) / jPeak) * -1 #This tall double jump is designed for Owen
@onready var jGrav: float = ((-2 * jHeight) / (jPeak * jPeak)) * -1
@onready var fGrav: float = ((-2 * jHeight) / (jTime * jTime)) * -1

@export_category(\"Upgrades\")
@export var doubleUp : bool = false
@export var dashUp : bool = false



func _ready():
	pass

func _process(_delta):
#	firespeed += delta if firespeed < 0.32 else 0.32
#	dashdelay += delta if dashdelay < 2.5 else 2.5
#	print(self.position)
	pass





func _physics_process(_delta):
	state_handler()
	if !is_on_floor():
		velocity.y += get_grav() * _delta
	velocity.x = 0
	set_velocity(velocity)
	set_up_direction(Vector2.UP)
	velocity = velocity
	if Input.is_action_pressed(\"attack\") and fireSpeed >= 0.32:
		attack()
		fireSpeed = 0
	if Input.is_action_pressed(\"move_left\"):
		velocity.x -= moveSpeed
		isMoving = true
		sprite.scale.x = -1
	if Input.is_action_pressed(\"move_right\"):
		velocity.x += moveSpeed
		isMoving = true
		sprite.scale.x = 1
	else: isMoving = false
#	if isMoving:
#		anim.play(\"Owenwalk\")
	move_and_slide()
#flipping his sprite should be a temporary fix. He'll need new ones when he has a sword.

var state = \"GROUND\"

func state_handler():
	match state:
		\"GROUND\":
			canJump = true
			anim.play(\"Owenidle\")
#			print(\"Ground\")
			if Input.is_action_just_pressed(\"jump\"):
				jump()
			if !is_on_floor():
				canDouble = true
				state = \"AIR\"
		\"AIR\":
			canJump = false
#			print(\"Air\")
			if velocity.y <= 0:
				anim.play(\"Owenjump\")
			if velocity.y >= 0:
				anim.play(\"Owenfall\")
			if Input.is_action_just_pressed(\"jump\") and canDouble and doubleUp:
				double()
			if is_on_floor():
				state = \"GROUND\"





func get_grav() -> float:
	return jGrav if velocity.y < 0 else fGrav

#func get_input_velocity(_delta) -> float:
#	var horizontal := 0.0
#	var is_left
#	if Input.is_action_pressed(\"ui_left\"):
#		horizontal -= 1
#		sprite.scale.x = -1
#		is_left = true
#	if Input.is_action_pressed(\"ui_right\"):
#		horizontal += 1
#		sprite.scale.x = 1
#		is_left = false
#	return horizontal

func jump():
	print(\"jumping!\")
	velocity.y = jVelo
	canJump = false

func double():
	canDouble = false
	print(\"double!\")
	velocity.y = 0
	velocity.y = dVelo

func attack():
	pass



func _on_ui_activator_area_entered(_area):
	print(\"is it seeing?\")
#	UI_E.visible = true
	pass
"

[sub_resource type="SegmentShape2D" id="SegmentShape2D_ppxbd"]
b = Vector2(-112, 0)

[node name="Hometown_testlevel" type="Node2D"]
script = ExtResource("1_gure2")

[node name="UI_Handler" type="Node" parent="."]

[node name="E_garage" parent="UI_Handler" instance=ExtResource("4_suvvi")]
position = Vector2(768, -46)

[node name="E_home" parent="UI_Handler" instance=ExtResource("4_suvvi")]
z_index = 5
position = Vector2(338, -46)

[node name="E_weaver" parent="UI_Handler" instance=ExtResource("4_suvvi")]
position = Vector2(-1679, 5)

[node name="PlayerUI" parent="UI_Handler" instance=ExtResource("8_2l018")]
position = Vector2(334, -24)

[node name="Camera2D" parent="UI_Handler/PlayerUI" index="0"]
position = Vector2(0, 64)

[node name="DialogueBox" parent="UI_Handler/PlayerUI/Camera2D" index="0"]
position = Vector2(0, 0)

[node name="AnimationPlayer" parent="UI_Handler/PlayerUI/Camera2D/DialogueBox" index="6"]
playback_process_mode = 0

[node name="DBOXTimerHandler" parent="UI_Handler" instance=ExtResource("4_j7puc")]

[node name="TileMap_Hometown" parent="." instance=ExtResource("1_5xc7s")]
layer_0/name = "Houses"
layer_0/z_index = -2
layer_0/tile_data = PackedInt32Array(3, 262145, 4, -65533, 262145, 3, 4, 65537, 4, 5, 393217, 4, -65531, 393217, 3, -131067, 393217, 2, -196603, 393217, 1, -262139, 393217, 0, -262140, 65537, 0, -262141, 131073, 0, -262142, 131073, 0, -262143, 131073, 0, -262144, 1, 0, -196604, 65537, 1, -131068, 65537, 2, -65532, 65537, 3, -196605, 327681, 3, -131069, 196609, 2, -131070, 196609, 2, -131071, 196609, 2, -131072, 1, 2, -196608, 1, 1, -65536, 1, 3, 0, 1, 4, 1, 131073, 4, 2, 196609, 4, -65534, 196609, 3, -65535, 131073, 3, -196606, 131073, 1, -196607, 327681, 3, -131066, 458753, 2, -131065, 524289, 2, 6, 458753, 4, -65530, 458753, 3, -65527, 655361, 3, 9, 655361, 4, -131063, 655361, 2, -131064, 524289, 2, -65529, 524289, 3, -65528, 524289, 3, 7, 524289, 4, 8, 589825, 4, 65516, 393217, 4, -20, 393217, 3, 65515, 196609, 4, 65514, 131073, 4, 65513, 327681, 4, 65511, 65537, 4, 65512, 262145, 4, -24, 262145, 3, 65510, 327681, 4, 65509, 65537, 4, -27, 65537, 3, 65508, 327681, 4, 65507, 262145, 4, -29, 262145, 3, -28, 327681, 3, -26, 327681, 3, -25, 65537, 3, -65561, 65537, 2, -65563, 65537, 2, -65562, 196609, 2, -65564, 196609, 2, -65565, 196609, 2, -65560, 196609, 2, -65559, 196609, 2, -65558, 196609, 2, -65557, 196609, 2, -65556, 393217, 2, -21, 196609, 3, -23, 131073, 1, -22, 131073, 3, -30, 327681, 3, 65506, 327681, 4, -32, 131073, 3, 65504, 131073, 4, -31, 196609, 3, 65505, 196609, 4, -65569, 1, 2, -33, 1, 3, 65503, 1, 4, -65568, 196609, 2, -65567, 196609, 2, -65566, 131073, 2, -131104, 327681, 3, -131103, 327681, 3, -131102, 327681, 3, -131101, 131073, 1, -131100, 327681, 3, -131099, 65537, 1, -131098, 327681, 3, -131097, 65537, 1, -131096, 327681, 3, -131095, 327681, 3, -131094, 327681, 3, -131093, 131073, 1, -131092, 393217, 1, -131105, 1, 1, -196641, 1, 0, -196640, 131073, 0, -196639, 65537, 0, -196628, 393217, 0, -196638, 131073, 0, -196637, 131073, 0, -196636, 131073, 0, -196635, 131073, 0, -196634, 131073, 0, -196633, 131073, 0, -196632, 131073, 0, -196631, 131073, 0, -196630, 65537, 0, -196629, 131073, 0, -65573, 458753, 2, -37, 458753, 3, 65499, 458753, 4, -65572, 524289, 2, -36, 524289, 3, 65500, 524289, 4, -65571, 524289, 2, -35, 524289, 3, 65501, 589825, 4, -65570, 655361, 2, -34, 655361, 3, 65502, 655361, 4, -65577, 458753, 2, -41, 458753, 3, 65495, 458753, 4, -65576, 524289, 2, -40, 524289, 3, 65496, 524289, 4, -65575, 524289, 2, -39, 524289, 3, 65497, 589825, 4, -65574, 655361, 2, -38, 655361, 3, 65498, 655361, 4, -65586, 458753, 2, -50, 458753, 3, 65486, 458753, 4, -65585, 524289, 2, -49, 524289, 3, 65487, 524289, 4, -65584, 524289, 2, -48, 524289, 3, 65488, 589825, 4, -65583, 655361, 2, -47, 655361, 3, 65489, 655361, 4, -65582, 458753, 2, -46, 458753, 3, 65490, 458753, 4, -65581, 524289, 2, -45, 524289, 3, 65491, 524289, 4, -65580, 524289, 2, -44, 524289, 3, 65492, 589825, 4, -65579, 655361, 2, -43, 655361, 3, 65493, 655361, 4, -196672, 1, 0, -131136, 1, 1, -65600, 1, 2, -64, 1, 3, 65472, 1, 4, -196671, 131073, 0, -131135, 327681, 3, -65599, 196609, 2, -63, 131073, 3, 65473, 131073, 4, -196670, 65537, 0, -131134, 327681, 3, -65598, 196609, 2, -62, 196609, 3, 65474, 196609, 4, -196669, 131073, 0, -131133, 327681, 3, -65597, 131073, 2, -61, 327681, 3, 65475, 327681, 4, -196668, 131073, 0, -131132, 131073, 1, -65596, 196609, 2, -60, 262145, 3, 65476, 262145, 4, -196667, 131073, 0, -131131, 327681, 3, -65595, 196609, 2, -59, 327681, 3, 65477, 327681, 4, -196666, 131073, 0, -131130, 65537, 1, -65594, 65537, 2, -58, 65537, 3, 65478, 65537, 4, -196665, 131073, 0, -131129, 327681, 3, -65593, 196609, 2, -57, 327681, 3, 65479, 327681, 4, -196664, 131073, 0, -131128, 65537, 1, -65592, 65537, 2, -56, 65537, 3, 65480, 65537, 4, -196663, 131073, 0, -131127, 327681, 3, -65591, 196609, 2, -55, 262145, 3, 65481, 262145, 4, -196662, 131073, 0, -131126, 327681, 3, -65590, 196609, 2, -54, 131073, 1, 65482, 327681, 4, -196661, 65537, 0, -131125, 327681, 3, -65589, 196609, 2, -53, 131073, 3, 65483, 131073, 4, -196660, 131073, 0, -131124, 131073, 1, -65588, 196609, 2, -52, 196609, 3, 65484, 196609, 4, -196659, 393217, 0, -131123, 393217, 1, -65587, 393217, 2, -51, 393217, 3, 65485, 393217, 4, -65617, 458753, 2, -81, 458753, 3, 65455, 458753, 4, -65616, 524289, 2, -80, 524289, 3, 65456, 524289, 4, -65615, 524289, 2, -79, 524289, 3, 65457, 589825, 4, -65614, 655361, 2, -78, 655361, 3, 65458, 655361, 4, 65471, 393217, 4, -65, 393217, 3, -65601, 393217, 2, -131137, 393217, 1, 65470, 65537, 4, 65469, 327681, 4, 65468, 327681, 4, -66, 65537, 3, -65602, 65537, 2, -131138, 65537, 1, -67, 327681, 3, -68, 327681, 3, -65604, 196609, 2, -65603, 131073, 2, -131139, 327681, 3, -131140, 327681, 3, -196673, 393217, 0, -196675, 131073, 0, -196674, 65537, 0, -196677, 1, 0, -196676, 131073, 0, 65467, 1, 4, -69, 1, 3, -65605, 1, 2, -131141, 1, 1)
layer_1/name = "Pavement"
layer_1/enabled = true
layer_1/modulate = Color(1, 1, 1, 1)
layer_1/y_sort_enabled = false
layer_1/y_sort_origin = 0
layer_1/z_index = 0
layer_1/tile_data = PackedInt32Array(0, 327680, 0, 1, 0, 0, 2, 0, 0, 3, 0, 0, 4, 0, 0, 5, 0, 0, 6, 0, 0, 7, 0, 0, 8, 0, 0, 9, 0, 0, 10, 0, 0, 65535, 262144, 0, 131071, 0, 1, 65536, 0, 1, 65537, 0, 1, 65538, 0, 1, 65539, 0, 1, 65540, 0, 1, 65541, 0, 1, 65542, 0, 1, 65543, 0, 1, 65544, 0, 1, 65545, 0, 1, 65546, 0, 1, 65534, 262144, 0, 65533, 196608, 0, 131070, 0, 1, 131069, 196608, 1, 131068, 196608, 1, 131067, 131072, 1, 65531, 131072, 0, 65532, 0, 0, 131066, 262144, 1, 131065, 262144, 1, 131064, 262144, 1, 131063, 262144, 1, 131062, 262144, 1, 131057, 0, 1, 131058, 0, 1, 131059, 0, 1, 65524, 0, 0, 131060, 0, 1, 65525, 65536, 0, 131061, 65536, 1, 131056, 0, 1, 131053, 0, 1, 65517, 262144, 0, 131052, 0, 1, 131051, 0, 1, 131050, 0, 1, 131049, 0, 1, 131048, 0, 1, 131047, 0, 1, 131046, 0, 1, 131045, 0, 1, 131044, 0, 1, 65516, 196608, 0, 65515, 0, 0, 65514, 0, 0, 65513, 0, 0, 65512, 0, 0, 65511, 0, 0, 65510, 0, 0, 65509, 0, 0, 65508, 0, 0, 65507, 0, 0, 65506, 0, 0, 65505, 0, 0, 65504, 0, 0, 65503, 0, 0, 65502, 131072, 0, 65499, 65536, 0, 131043, 0, 1, 131042, 0, 1, 131041, 0, 1, 131040, 0, 1, 131039, 0, 1, 131038, 131072, 1, 131037, 262144, 1, 131036, 262144, 1, 131035, 65536, 1, 65458, 196608, 0, 65459, 262144, 0, 65460, 262144, 0, 65461, 327680, 0, 65466, 0, 0, 65467, 0, 0, 65468, 0, 0, 65469, 0, 0, 65470, 0, 0, 65471, 0, 0, 65472, 0, 0, 65473, 0, 0, 65474, 0, 0, 65475, 0, 0, 65476, 0, 0, 65477, 0, 0, 65478, 0, 0, 65479, 0, 0, 65480, 0, 0, 65481, 0, 0, 65482, 0, 0, 65483, 0, 0, 65484, 0, 0, 65485, 0, 0, 65486, 65536, 0, 65489, 131072, 0, 65490, 65536, 0, 65493, 131072, 0, 65494, 0, 0, 65495, 65536, 0, 131029, 131072, 1, 131031, 65536, 1, 131030, 0, 1, 131026, 65536, 1, 131025, 131072, 1, 131022, 65536, 1, 131034, 131072, 1, 65498, 131072, 0, 131021, 0, 1, 131020, 0, 1, 131019, 0, 1, 131018, 0, 1, 131017, 0, 1, 131016, 0, 1, 131015, 0, 1, 131014, 0, 1, 131013, 0, 1, 131012, 0, 1, 131011, 0, 1, 131010, 0, 1, 131009, 0, 1, 131008, 0, 1, 131007, 0, 1, 131006, 0, 1, 131005, 0, 1, 131004, 0, 1, 131003, 0, 1, 131002, 0, 1, 131001, 0, 1, 131000, 0, 1, 130999, 0, 1, 130998, 0, 1, 130997, 0, 1, 130996, 0, 1, 130995, 0, 1, 130994, 0, 1, 131032, 262144, 1, 131033, 262144, 1, 131028, 262144, 1, 131027, 262144, 1, 131024, 262144, 1, 131023, 262144, 1, 131055, 0, 1, 131054, 0, 1, 65518, 262144, 0, 65519, 262144, 0, 65520, 262144, 0, 65521, 262144, 0, 65522, 262144, 0, 65523, 327680, 0, 130993, 262144, 1, 130992, 262144, 1, 130991, 262144, 1, 130990, 262144, 1, 130989, 262144, 1, 130988, 262144, 1, 130987, 262144, 1, 130986, 262144, 1, 130985, 262144, 1, 130984, 262144, 1, 130983, 262144, 1, 130982, 262144, 1, 130981, 262144, 1, 130980, 262144, 1, 130979, 262144, 1, 130978, 262144, 1, 130977, 262144, 1, 130976, 262144, 1)
layer_2/name = "Gardens"
layer_2/enabled = true
layer_2/modulate = Color(1, 1, 1, 1)
layer_2/y_sort_enabled = false
layer_2/y_sort_origin = 0
layer_2/z_index = -1
layer_2/tile_data = PackedInt32Array(65533, 262146, 0, 65534, 2, 0, 65535, 2, 0, 0, 327682, 0, 65516, 262146, 0, 65523, 327682, 0, 65518, 131074, 0, 65517, 65538, 0, 65519, 196610, 0, 65520, 65538, 0, 65521, 131074, 0, 65522, 196610, 0, 131082, 2, 1, 131081, 2, 1, 131080, 2, 1, 131079, 2, 1, 131078, 2, 1, 131077, 2, 1, 131076, 2, 1, 131075, 2, 1, 131074, 2, 1, 131073, 2, 1, 131072, 2, 1, 196607, 2, 1, 196606, 2, 1, 196605, 2, 1, 196604, 2, 1, 196603, 2, 1, 196602, 2, 1, 196601, 2, 1, 196600, 2, 1, 196599, 2, 1, 196598, 2, 1, 196597, 2, 1, 196596, 2, 1, 196618, 65538, 1, 196617, 65538, 1, 196616, 65538, 1, 196615, 65538, 1, 196614, 65538, 1, 196613, 65538, 1, 196612, 65538, 1, 196611, 65538, 1, 196610, 65538, 1, 196609, 65538, 1, 196608, 65538, 1, 262143, 65538, 1, 262142, 65538, 1, 262141, 65538, 1, 262140, 65538, 1, 262139, 65538, 1, 262138, 65538, 1, 262137, 65538, 1, 262136, 65538, 1, 262135, 65538, 1, 262134, 65538, 1, 262133, 65538, 1, 262132, 65538, 1, 327580, 65538, 1, 393116, 65538, 1, 458652, 65538, 1, 524188, 65538, 1, 327581, 65538, 1, 393117, 65538, 1, 458653, 65538, 1, 524189, 65538, 1, 327582, 65538, 1, 393118, 65538, 1, 458654, 65538, 1, 524190, 65538, 1, 327583, 65538, 1, 393119, 65538, 1, 458655, 65538, 1, 524191, 65538, 1, 327584, 65538, 1, 393120, 65538, 1, 458656, 65538, 1, 524192, 65538, 1, 327585, 65538, 1, 393121, 65538, 1, 458657, 65538, 1, 524193, 65538, 1, 327586, 65538, 1, 393122, 65538, 1, 458658, 65538, 1, 524194, 65538, 1, 327587, 65538, 1, 393123, 65538, 1, 458659, 65538, 1, 524195, 65538, 1, 327588, 65538, 1, 393124, 65538, 1, 458660, 65538, 1, 524196, 65538, 1, 327589, 65538, 1, 393125, 65538, 1, 458661, 65538, 1, 524197, 65538, 1, 327590, 65538, 1, 393126, 65538, 1, 458662, 65538, 1, 524198, 65538, 1, 327591, 65538, 1, 393127, 65538, 1, 458663, 65538, 1, 524199, 65538, 1, 327592, 65538, 1, 393128, 65538, 1, 458664, 65538, 1, 524200, 65538, 1, 327593, 65538, 1, 393129, 65538, 1, 458665, 65538, 1, 524201, 65538, 1, 327594, 65538, 1, 393130, 65538, 1, 458666, 65538, 1, 524202, 65538, 1, 327595, 65538, 1, 393131, 65538, 1, 458667, 65538, 1, 524203, 65538, 1, 327596, 65538, 1, 393132, 65538, 1, 458668, 65538, 1, 524204, 65538, 1, 327597, 65538, 1, 393133, 65538, 1, 458669, 65538, 1, 524205, 65538, 1, 327598, 65538, 1, 393134, 65538, 1, 458670, 65538, 1, 524206, 65538, 1, 327599, 65538, 1, 393135, 65538, 1, 458671, 65538, 1, 524207, 65538, 1, 327600, 65538, 1, 393136, 65538, 1, 458672, 65538, 1, 524208, 65538, 1, 327601, 65538, 1, 393137, 65538, 1, 458673, 65538, 1, 524209, 65538, 1, 327602, 65538, 1, 393138, 65538, 1, 458674, 65538, 1, 524210, 65538, 1, 327603, 65538, 1, 393139, 65538, 1, 458675, 65538, 1, 524211, 65538, 1, 327604, 65538, 1, 393140, 65538, 1, 458676, 65538, 1, 524212, 65538, 1, 327605, 65538, 1, 393141, 65538, 1, 458677, 65538, 1, 524213, 65538, 1, 327606, 65538, 1, 393142, 65538, 1, 458678, 65538, 1, 524214, 65538, 1, 327607, 65538, 1, 393143, 65538, 1, 458679, 65538, 1, 524215, 65538, 1, 327608, 65538, 1, 393144, 65538, 1, 458680, 65538, 1, 524216, 65538, 1, 327609, 65538, 1, 393145, 65538, 1, 458681, 65538, 1, 524217, 65538, 1, 327610, 65538, 1, 393146, 65538, 1, 458682, 65538, 1, 524218, 65538, 1, 327611, 65538, 1, 393147, 65538, 1, 458683, 65538, 1, 524219, 65538, 1, 327612, 65538, 1, 393148, 65538, 1, 458684, 65538, 1, 524220, 65538, 1, 327613, 65538, 1, 393149, 65538, 1, 458685, 65538, 1, 524221, 65538, 1, 327614, 65538, 1, 393150, 65538, 1, 458686, 65538, 1, 524222, 65538, 1, 327615, 65538, 1, 393151, 65538, 1, 458687, 65538, 1, 524223, 65538, 1, 327616, 65538, 1, 393152, 65538, 1, 458688, 65538, 1, 524224, 65538, 1, 327617, 65538, 1, 393153, 65538, 1, 458689, 65538, 1, 524225, 65538, 1, 327618, 65538, 1, 393154, 65538, 1, 458690, 65538, 1, 524226, 65538, 1, 327619, 65538, 1, 393155, 65538, 1, 458691, 65538, 1, 524227, 65538, 1, 327620, 65538, 1, 393156, 65538, 1, 458692, 65538, 1, 524228, 65538, 1, 327621, 65538, 1, 393157, 65538, 1, 458693, 65538, 1, 524229, 65538, 1, 327622, 65538, 1, 393158, 65538, 1, 458694, 65538, 1, 524230, 65538, 1, 327623, 65538, 1, 393159, 65538, 1, 458695, 65538, 1, 524231, 65538, 1, 327624, 65538, 1, 393160, 65538, 1, 458696, 65538, 1, 524232, 65538, 1, 327625, 65538, 1, 393161, 65538, 1, 458697, 65538, 1, 524233, 65538, 1, 327626, 65538, 1, 393162, 65538, 1, 458698, 65538, 1, 524234, 65538, 1, 327627, 65538, 1, 393163, 65538, 1, 458699, 65538, 1, 524235, 65538, 1, 327628, 65538, 1, 393164, 65538, 1, 458700, 65538, 1, 524236, 65538, 1, 327629, 65538, 1, 393165, 65538, 1, 458701, 65538, 1, 524237, 65538, 1, 327630, 65538, 1, 393166, 65538, 1, 458702, 65538, 1, 524238, 65538, 1, 327631, 65538, 1, 393167, 65538, 1, 458703, 65538, 1, 524239, 65538, 1, 327632, 65538, 1, 393168, 65538, 1, 458704, 65538, 1, 524240, 65538, 1, 327633, 65538, 1, 393169, 65538, 1, 458705, 65538, 1, 524241, 65538, 1, 327634, 65538, 1, 393170, 65538, 1, 458706, 65538, 1, 524242, 65538, 1, 327635, 65538, 1, 393171, 65538, 1, 458707, 65538, 1, 524243, 65538, 1, 327636, 65538, 1, 393172, 65538, 1, 458708, 65538, 1, 524244, 65538, 1, 327637, 65538, 1, 393173, 65538, 1, 458709, 65538, 1, 524245, 65538, 1, 327638, 65538, 1, 393174, 65538, 1, 458710, 65538, 1, 524246, 65538, 1, 327639, 65538, 1, 393175, 65538, 1, 458711, 65538, 1, 524247, 65538, 1, 327640, 65538, 1, 393176, 65538, 1, 458712, 65538, 1, 524248, 65538, 1, 327641, 65538, 1, 393177, 65538, 1, 458713, 65538, 1, 524249, 65538, 1, 327642, 65538, 1, 393178, 65538, 1, 458714, 65538, 1, 524250, 65538, 1, 327643, 65538, 1, 393179, 65538, 1, 458715, 65538, 1, 524251, 65538, 1, 327644, 65538, 1, 393180, 65538, 1, 458716, 65538, 1, 524252, 65538, 1, 327645, 65538, 1, 393181, 65538, 1, 458717, 65538, 1, 524253, 65538, 1, 327646, 65538, 1, 393182, 65538, 1, 458718, 65538, 1, 524254, 65538, 1, 327647, 65538, 1, 393183, 65538, 1, 458719, 65538, 1, 524255, 65538, 1, 327648, 65538, 1, 393184, 65538, 1, 458720, 65538, 1, 524256, 65538, 1, 327649, 65538, 1, 393185, 65538, 1, 458721, 65538, 1, 524257, 65538, 1, 327650, 65538, 1, 393186, 65538, 1, 458722, 65538, 1, 524258, 65538, 1, 327651, 65538, 1, 393187, 65538, 1, 458723, 65538, 1, 524259, 65538, 1, 327652, 65538, 1, 393188, 65538, 1, 458724, 65538, 1, 524260, 65538, 1, 327653, 65538, 1, 393189, 65538, 1, 458725, 65538, 1, 524261, 65538, 1, 327654, 65538, 1, 393190, 65538, 1, 458726, 65538, 1, 524262, 65538, 1, 327655, 65538, 1, 393191, 65538, 1, 458727, 65538, 1, 524263, 65538, 1, 327656, 65538, 1, 393192, 65538, 1, 458728, 65538, 1, 524264, 65538, 1, 327657, 65538, 1, 393193, 65538, 1, 458729, 65538, 1, 524265, 65538, 1, 327658, 65538, 1, 393194, 65538, 1, 458730, 65538, 1, 524266, 65538, 1, 327659, 65538, 1, 393195, 65538, 1, 458731, 65538, 1, 524267, 65538, 1, 327660, 65538, 1, 393196, 65538, 1, 458732, 65538, 1, 524268, 65538, 1, 327661, 65538, 1, 393197, 65538, 1, 458733, 65538, 1, 524269, 65538, 1, 327662, 65538, 1, 393198, 65538, 1, 458734, 65538, 1, 524270, 65538, 1, 327663, 65538, 1, 393199, 65538, 1, 458735, 65538, 1, 524271, 65538, 1, 327664, 65538, 1, 393200, 65538, 1, 458736, 65538, 1, 524272, 65538, 1, 327665, 65538, 1, 393201, 65538, 1, 458737, 65538, 1, 524273, 65538, 1, 327666, 65538, 1, 393202, 65538, 1, 458738, 65538, 1, 524274, 65538, 1, 327667, 65538, 1, 393203, 65538, 1, 458739, 65538, 1, 524275, 65538, 1, 327668, 65538, 1, 393204, 65538, 1, 458740, 65538, 1, 524276, 65538, 1, 327669, 65538, 1, 393205, 65538, 1, 458741, 65538, 1, 524277, 65538, 1, 327670, 65538, 1, 393206, 65538, 1, 458742, 65538, 1, 524278, 65538, 1, 327671, 65538, 1, 393207, 65538, 1, 458743, 65538, 1, 524279, 65538, 1, 327672, 65538, 1, 393208, 65538, 1, 458744, 65538, 1, 524280, 65538, 1, 327673, 65538, 1, 393209, 65538, 1, 458745, 65538, 1, 524281, 65538, 1, 327674, 65538, 1, 393210, 65538, 1, 458746, 65538, 1, 524282, 65538, 1, 327675, 65538, 1, 393211, 65538, 1, 458747, 65538, 1, 524283, 65538, 1, 327676, 65538, 1, 393212, 65538, 1, 458748, 65538, 1, 524284, 65538, 1, 327677, 65538, 1, 393213, 65538, 1, 458749, 65538, 1, 524285, 65538, 1, 327678, 65538, 1, 393214, 65538, 1, 458750, 65538, 1, 524286, 65538, 1, 327679, 65538, 1, 393215, 65538, 1, 458751, 65538, 1, 524287, 65538, 1, 262144, 65538, 1, 327680, 65538, 1, 393216, 65538, 1, 458752, 65538, 1, 262145, 65538, 1, 327681, 65538, 1, 393217, 65538, 1, 458753, 65538, 1, 262146, 65538, 1, 327682, 65538, 1, 393218, 65538, 1, 458754, 65538, 1, 262147, 65538, 1, 327683, 65538, 1, 393219, 65538, 1, 458755, 65538, 1, 262148, 65538, 1, 327684, 65538, 1, 393220, 65538, 1, 458756, 65538, 1, 262149, 65538, 1, 327685, 65538, 1, 393221, 65538, 1, 458757, 65538, 1, 262150, 65538, 1, 327686, 65538, 1, 393222, 65538, 1, 458758, 65538, 1, 262151, 65538, 1, 327687, 65538, 1, 393223, 65538, 1, 458759, 65538, 1, 262152, 65538, 1, 327688, 65538, 1, 393224, 65538, 1, 458760, 65538, 1, 262153, 65538, 1, 327689, 65538, 1, 393225, 65538, 1, 458761, 65538, 1, 262154, 65538, 1, 327690, 65538, 1, 393226, 65538, 1, 458762, 65538, 1, 262044, 65538, 1, 262045, 65538, 1, 262046, 65538, 1, 262047, 65538, 1, 262048, 65538, 1, 262049, 65538, 1, 262050, 65538, 1, 262051, 65538, 1, 262052, 65538, 1, 262053, 65538, 1, 262054, 65538, 1, 262055, 65538, 1, 262056, 65538, 1, 262057, 65538, 1, 262058, 65538, 1, 262059, 65538, 1, 262060, 65538, 1, 262061, 65538, 1, 262062, 65538, 1, 262063, 65538, 1, 262064, 65538, 1, 262065, 65538, 1, 262066, 65538, 1, 262067, 65538, 1, 262068, 65538, 1, 262069, 65538, 1, 262070, 65538, 1, 262071, 65538, 1, 262072, 65538, 1, 262073, 65538, 1, 262074, 65538, 1, 262075, 65538, 1, 262076, 65538, 1, 262077, 65538, 1, 262078, 65538, 1, 262079, 65538, 1, 262080, 65538, 1, 262081, 65538, 1, 262082, 65538, 1, 262083, 65538, 1, 262084, 65538, 1, 262085, 65538, 1, 262086, 65538, 1, 262087, 65538, 1, 262088, 65538, 1, 262089, 65538, 1, 262090, 65538, 1, 262091, 65538, 1, 262092, 65538, 1, 262093, 65538, 1, 262094, 65538, 1, 262095, 65538, 1, 262096, 65538, 1, 262097, 65538, 1, 262098, 65538, 1, 262099, 65538, 1, 262100, 65538, 1, 262101, 65538, 1, 262102, 65538, 1, 262103, 65538, 1, 262104, 65538, 1, 262105, 65538, 1, 262106, 65538, 1, 262107, 65538, 1, 262108, 65538, 1, 262109, 65538, 1, 262110, 65538, 1, 262111, 65538, 1, 262112, 65538, 1, 262113, 65538, 1, 262114, 65538, 1, 262115, 65538, 1, 262116, 65538, 1, 262117, 65538, 1, 262118, 65538, 1, 262119, 65538, 1, 262120, 65538, 1, 262121, 65538, 1, 262122, 65538, 1, 262123, 65538, 1, 262124, 65538, 1, 262125, 65538, 1, 262126, 65538, 1, 262127, 65538, 1, 262128, 65538, 1, 262129, 65538, 1, 262130, 65538, 1, 262131, 65538, 1, 196595, 2, 1, 196594, 2, 1, 196593, 2, 1, 196592, 2, 1, 196591, 2, 1, 196590, 2, 1, 196589, 2, 1, 196588, 2, 1, 196587, 2, 1, 196586, 2, 1, 196585, 2, 1, 196584, 2, 1, 196583, 2, 1, 196582, 2, 1, 196581, 2, 1, 196580, 2, 1, 196579, 2, 1, 196578, 2, 1, 196577, 2, 1, 196576, 2, 1, 196575, 2, 1, 196574, 2, 1, 196573, 2, 1, 196572, 2, 1, 196571, 2, 1, 196570, 2, 1, 196569, 2, 1, 196568, 2, 1, 196567, 2, 1, 196566, 2, 1, 196565, 2, 1, 196564, 2, 1, 196563, 2, 1, 196562, 2, 1, 196561, 2, 1, 196560, 2, 1, 196559, 2, 1, 196558, 2, 1, 196557, 2, 1, 196556, 2, 1, 196555, 2, 1, 196554, 2, 1, 196553, 2, 1, 196552, 2, 1, 196551, 2, 1, 196550, 2, 1, 196549, 2, 1, 196548, 2, 1, 196547, 2, 1, 196546, 2, 1, 196545, 2, 1, 196544, 2, 1, 196543, 2, 1, 196542, 2, 1, 196541, 2, 1, 196540, 2, 1, 196539, 2, 1, 196538, 2, 1, 196537, 2, 1, 196536, 2, 1, 196535, 2, 1, 196534, 2, 1, 196533, 2, 1, 196532, 2, 1, 196531, 2, 1, 196530, 2, 1, 196529, 2, 1, 196528, 2, 1, 196527, 2, 1, 196526, 2, 1, 196525, 2, 1, 196524, 2, 1, 196523, 2, 1, 196522, 2, 1, 196521, 2, 1, 196520, 2, 1, 196519, 2, 1, 196518, 2, 1, 196517, 2, 1, 196516, 2, 1, 196515, 2, 1, 196514, 2, 1, 196513, 2, 1, 196512, 2, 1, 196511, 2, 1, 196510, 2, 1, 196509, 2, 1, 196508, 2, 1)
layer_3/name = "Backhouses"
layer_3/enabled = true
layer_3/modulate = Color(1, 1, 1, 1)
layer_3/y_sort_enabled = false
layer_3/y_sort_origin = 0
layer_3/z_index = -3
layer_3/tile_data = PackedInt32Array(-65606, 1, 0, -65605, 131073, 0, -70, 1, 1, 65466, 1, 4, -69, 327681, 3, 65467, 327681, 4)
metadata/_edit_lock_ = true

[node name="Owen" parent="." instance=ExtResource("2_y2qan")]
position = Vector2(334, 40)
script = SubResource("GDScript_rm3dv")
metadata/_edit_group_ = true

[node name="ParallaxSky" parent="Owen/ParallaxBackground" index="0"]
motion_scale = Vector2(0.1, 1)

[node name="Sky" parent="Owen/ParallaxBackground/ParallaxSky" index="0"]
z_index = -10
texture = ExtResource("3_ht8he")

[node name="ParallaxLayer2" parent="Owen/ParallaxBackground" index="1"]
motion_scale = Vector2(0.5, 1)
motion_mirroring = Vector2(1600, 0)

[node name="Sprite2D" parent="Owen/ParallaxBackground/ParallaxLayer2" index="0"]
texture = ExtResource("8_4jmcr")

[node name="ParallaxLayer" parent="Owen/ParallaxBackground" index="2"]
motion_scale = Vector2(0.7, 1)
motion_mirroring = Vector2(1600, 0)

[node name="Sprite2D" parent="Owen/ParallaxBackground/ParallaxLayer" index="0"]
texture = ExtResource("5_1hesp")

[node name="CameraTransform" parent="Owen" index="8"]
remote_path = NodePath("../../UI_Handler/PlayerUI/Camera2D")

[node name="StaticBody2D2" type="StaticBody2D" parent="."]
position = Vector2(610, -184)

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D2"]
position = Vector2(77, 0)
shape = SubResource("SegmentShape2D_ppxbd")
one_way_collision = true

[node name="Cars" type="Sprite2D" parent="."]
z_index = 10
position = Vector2(-5884, 93)
scale = Vector2(2, 2)
texture = ExtResource("9_4icw6")

[connection signal="area_entered" from="UI_Handler/E_garage" to="." method="_on_e_garage_area_entered"]
[connection signal="area_exited" from="UI_Handler/E_garage" to="." method="_on_e_garage_area_exited"]
[connection signal="area_entered" from="UI_Handler/E_home" to="." method="_on_e_home_area_entered"]
[connection signal="area_exited" from="UI_Handler/E_home" to="." method="_on_e_home_area_exited"]
[connection signal="area_entered" from="UI_Handler/E_weaver" to="." method="_on_e_weaver_area_entered"]
[connection signal="area_exited" from="UI_Handler/E_weaver" to="." method="_on_e_weaver_area_exited"]
[connection signal="timeout" from="UI_Handler/DBOXTimerHandler/DBOXTimer" to="." method="_on_dbox_timer_timeout"]
[connection signal="timeout" from="UI_Handler/DBOXTimerHandler/DBOXTimer2" to="." method="_on_dbox_timer_2_timeout"]
[connection signal="body_entered" from="Owen/UIActivator" to="." method="_on_ui_activator_body_entered"]

[editable path="UI_Handler/PlayerUI"]
[editable path="UI_Handler/PlayerUI/Camera2D/DialogueBox"]
[editable path="UI_Handler/DBOXTimerHandler"]
[editable path="Owen"]
[editable path="Owen/Hurtbox"]
[editable path="Owen/OwlFeather"]
